{{- $releaseName := .Release.Name -}}
{{- $chartName := include "mc-thumbnail-generator.name" . -}}
{{- $cloudProviderFlavor := include "mc-thumbnail-generator.cloudProviderFlavor" . -}}
{{- $cloudProviderDockerRegistryUrl := include "mc-thumbnail-generator.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "mc-thumbnail-generator.cloudProviderImagePullSecretName" . -}}
{{- $imageTag := include "mc-thumbnail-generator.tag" . -}}
{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $releaseName }}
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "mc-thumbnail-generator.environment" . }}
    release: {{ $releaseName }}
    {{- include "mc-thumbnail-generator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}
      {{- include "mc-thumbnail-generator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}
        {{- include "mc-thumbnail-generator.selectorLabels" . | nindent 8 }}
      {{- if .Values.resetOnConfigChange }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      containers:
        - name: {{ $releaseName }}-deployment
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $imageTag }}
          {{- end }}
          volumeMounts:
            {{- if .Values.caSecretName }}
            - mountPath: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
              name: root-ca
              subPath: {{ quote .Values.caKey }}
            {{- end }}
            - mountPath: "/home/node/app/src/cesiumClientWeb/cesiumClientWebConfig.json"
              name: cesium-client-root-config
              subPath: cesiumClientWebConfig.json
              readOnly: true
          env:
            - name: SERVER_PORT
              value: {{ .Values.env.targetPort | quote }}
            {{- if .Values.caSecretName }}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ $releaseName }}-configmap
          ports:
            - name: http
              containerPort: {{ .Values.env.targetPort }}
              protocol: {{ .Values.env.protocol }}
          # livenessProbe:
          #   initialDelaySeconds: {{ .Values.initialDelaySeconds }}
          #   httpGet:
          #     path: /
          #     port: {{ .Values.env.targetPort }}
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
      volumes:
        {{- if .Values.caSecretName }}
        - name: root-ca
          secret:
            secretName: {{ .Values.caSecretName }}
        {{- end }}
        - name: cesium-client-root-config
          configMap:
            name: {{ .Release.Name }}-configmap
            items:
            - key: "CESIUM_CLIENT_WEB_CONFIG"
              path: "cesiumClientWebConfig.json"
{{- end -}}
